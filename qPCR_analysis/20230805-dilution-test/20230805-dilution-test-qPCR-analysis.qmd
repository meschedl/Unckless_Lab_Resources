---
title: "20230805-dilution-test-qPCR-analysis"
format: gfm
editor: visual
---

Load packages needed

```{r}
library(ggplot2)
library(dplyr)
library(tidyr)
```

Load in dataset

```{r}
Cq_values <- read.csv("/Users/maggieschedl/Desktop/Github/Unckless_Lab_Resources/qPCR_analysis/20230805-dilution-test/dilution_qPCR_info.csv")

```

Histogram of all Cq vaules

```{r}
# order the dilution
results_factor_levels <- c("oneng", "pointoneng", "pointohtwong")
# then apply this to the CCM data
Cq_values$dilution <- factor(Cq_values$dilution, levels=results_factor_levels)


ggplot(Cq_values, aes(x= Cq, fill = primer)) + geom_histogram(position = "dodge") + facet_grid(~dilution) 

# fill for which primer 
# facet breaks up the graph into different components by sample type
# dodge makes each primer have it's own column per value 

```

Interesting, I did think the Cq values would change more with this level of dilution.

Calculate the variances between the qPCR replicates for supernatant samples

```{r}
# make a dummy variable that is just the columns we want
s <- paste(Cq_values$sample_ID, Cq_values$primer, Cq_values$p47_35_cycle_result, Cq_values$project, Cq_values$treatment, Cq_values$dilution, Cq_values$sample_number, Cq_values$day_frozen)

# calculate the variances 
# tapply breaks the dataset up into groups and apply a function to each group
# we want each sample_number group to have the variance calculated for the Cq value 
# and save this information as a variable 
variances <- tapply(Cq_values$Cq, s, var)

# look at a histogram of the variances 
hist(variances)
# one has really high variance which is not good 

# which variances are above 0.4, which is higher than we want 
variances[which(variances > 0.4)]

# this is just this one sample
# there isn't an obvious outlier in this one, the Cqs are 33, 32, and 34. So I can't drop one value. So I will leave these in. This is just a test anyways
```

Calculate the mean Cq values

```{r}
# what are the Cq means for each sample_ID/primer/day/sample_type group?
means <- tapply(Cq_values$Cq, s, mean, na.rm=T)

# look at the means with a histogram
hist(means)

# want to plot the variances versus the means 
plot(variances~means)

```

This is the usual pattern, where the higher the mean, the higher the varience. That one sample stands out a lot, the others look good.

Now I need to add the mean and variance values to my main dataframes.

```{r}
# transform array into df
variances_df <- as.data.frame.table(variances)
# this gives me a dataframe but the entire first column is all the variables 
# and the second column is the variances which it calls freq (not sure why)
# use dplyr to separate them out into separate columns 

# name all the columns I want 
variances_df_sep <- variances_df %>% separate(Var1, c('sample_ID', 'primer', 'p47_35_cycle_result', 'project', 'treatment', 'dilution', 'sample_number', 'day_frozen'))
# check dataframe 
head(variances_df_sep)
# rename the Freq column to var for variance
names(variances_df_sep)[9] <- "var"
# check dataframe again
head(variances_df_sep)
```

So I have a df with the variances, now I want the means in it as well

```{r}
# going to transform the means array into a df
means_df <- as.data.frame.table(means)
# reaname the Freq column to mean
names(means_df)[2] <- "mean"
head(means_df)

# the means and the variances dfs are in the same order which is nice
# now I want to add the mean column to the variances df
means_variances_of_Cq_df <- cbind(variances_df_sep, means = means_df$mean)
# check how it looks
head(means_variances_of_Cq_df)
```

Plot the raw means of Cqs by primer by dilution for the two projects

```{r}
# order the dilution
results_factor_levels <- c("oneng", "pointoneng", "pointohtwong")
# then apply this to the CCM data
means_variances_of_Cq_df$dilution <- factor(means_variances_of_Cq_df$dilution, levels=results_factor_levels)

ggplot(means_variances_of_Cq_df, aes(y= means, x=primer, fill=dilution)) + geom_boxplot() + facet_grid(~project) 
```

Ok so this looks good, clear differences between the dilutions here in the exact pattern we expect. However the 115 is still not very high even for the stock flies at 0.02ng/ul DNA...

At this point, I am going to separate out the stock flies and the infection flies because those were two different experiments

Calculating delta Cq values for the stock flies

```{r}
stock_Cq_df <- means_variances_of_Cq_df[which(means_variances_of_Cq_df$project == "stock"),]

# order df by sample_number
stock_Cq_df <- stock_Cq_df[order(stock_Cq_df$sample_number),]

# Separate that dataframe, incriminating by 2, every number between 1-18 (number of rows in dataframe)
stock_Cq_df$means[seq(1,18,2)] # these are the 115 Cq means 
stock_Cq_df$means[seq(2,18,2)] # these are the TPI primer Cq means 

# make delta Cq, subtract the 115 value from the TPI primer value 
delta_Cqs_stock <- stock_Cq_df$means[seq(2,18,2)] - stock_Cq_df$means[seq(1,18,2)]

delta_Cqs_stock

# want to add this as a column to our df, but first need to remove the TPI rows 

stock_delta_Cq_df <- stock_Cq_df[which(stock_Cq_df$primer == "115"),]
# and this should be in the order of delta_Cqs_Stock
stock_delta_Cq_df$delta_Cq <- delta_Cqs_stock
```

```{r}
# add another column that is 2^deltaCq

stock_delta_Cq_df$delta_Cq_2 <- 2^(delta_Cqs_stock)


#Plot by dilution

ggplot(stock_delta_Cq_df, aes(y= delta_Cq_2, x=dilution)) + geom_boxplot()  + theme_linedraw() + geom_point(position="jitter", size=3)
```

I'm not sure the delta Cq is the most informative here

Plot the raw Cqs (for 115) in the same way

```{r}

ggplot(stock_delta_Cq_df, aes(y= means, x=dilution)) + geom_boxplot()  + theme_linedraw() + geom_point(position="jitter", size=3)

```

Plot mean Cq value for 115 by sample by dilution

```{r}

ggplot(stock_delta_Cq_df, aes(y= means, x=dilution, color = sample_ID))  + theme_linedraw() + geom_point() 

```

Calculating delta Cq values for the infection experiment flies

```{r}
infection_Cq_df <- means_variances_of_Cq_df[which(means_variances_of_Cq_df$project == "infection"),]

# order df by sample_number
infection_Cq_df <- infection_Cq_df[order(infection_Cq_df$sample_number),]

# Separate that dataframe, incriminating by 2, every number between 1-42 (number of rows in dataframe)
infection_Cq_df$means[seq(1,42,2)] # these are the 115 Cq means 
infection_Cq_df$means[seq(2,42,2)] # these are the TPI primer Cq means 

# make delta Cq, subtract the 115 value from the TPI primer value 
delta_Cqs_infection <- infection_Cq_df$means[seq(2,42,2)] - infection_Cq_df$means[seq(1,42,2)]

delta_Cqs_infection

# want to add this as a column to our df, but first need to remove the TPI rows 

infection_delta_Cq_df <- infection_Cq_df[which(infection_Cq_df$primer == "115"),]
# and this should be in the order of delta_Cqs_Stock
infection_delta_Cq_df$delta_Cq <- delta_Cqs_infection
```

```{r}
# add another column that is 2^deltaCq

infection_delta_Cq_df$delta_Cq_2 <- 2^(delta_Cqs_infection)


#Plot by dilution

ggplot(infection_delta_Cq_df, aes(y= delta_Cq_2, x=treatment, fill=dilution)) + geom_boxplot()  + theme_linedraw() + geom_point(position="jitter", size=1) + coord_trans(y='log10')

# I am not sure why the points are not separated out by dilution... and I don't know how to fix it 
```

For the delta Cqs there doesn't seem to be that much of a pattern with the diultion, except that the delta gets higher for the SPs with more dilution.

I think again, the raw Cqs might be better to look at

```{r}

ggplot(infection_delta_Cq_df, aes(y= means, x=treatment, fill = dilution)) + geom_boxplot()  + theme_linedraw() + geom_point(position="jitter", size=1)

```

Plot mean Cq value for 115 by sample by dilution and separate by treatment

```{r}

ggplot(infection_delta_Cq_df, aes(y= means, x=dilution, color = sample_ID))  + theme_linedraw() + geom_point() + facet_grid(~treatment)

```

Plot the 2\^delta Cq by sample by dilution and separate by treatment

```{r}

ggplot(infection_delta_Cq_df, aes(y= delta_Cq_2, x=dilution, color = sample_ID))  + theme_linedraw() + geom_point() + facet_grid(~treatment) + coord_trans(y='log10')

```

Plot the delta Cq by sample by dilution and separate by treatment

```{r}

ggplot(infection_delta_Cq_df, aes(y= delta_Cq, x=dilution, color = sample_ID))  + theme_linedraw() + geom_point() + facet_grid(~treatment)

```
