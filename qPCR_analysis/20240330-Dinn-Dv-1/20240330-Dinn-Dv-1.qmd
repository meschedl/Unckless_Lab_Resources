---
title: "20240330-Dinn-Dv-1-qPCR"
format: gfm
editor: visual
---

```{r}
library(ggplot2)
library(dplyr)
library(tidyr)
library(scales)
library(Rmisc)
```


```{r setup, include=FALSE}
knitr::opts_chunk$set(dpi=300,fig.width=7, fig.length = 9)
```

Load in dataset

```{r}
Cq_values <- read.csv("/Users/maggieschedl/Desktop/Github/Unckless_Lab_Resources/qPCR_analysis/20240330-Dinn-Dv-1/20240330-Dinn-Dv-1.csv")
```

Look at raw Cq values

```{r}
ggplot(Cq_values, aes(x= Cq, fill = primer)) + geom_histogram(position = "dodge") + facet_grid(~cell_type ~day ~infection) 
```

Controls look very similar and infections look very similar for each cell line which is good I think. 

```{r}
# use the variance function, and calculates the variance in Cq by the unique.name (each sample/primer has 3 Cq values to 
# calculate the variance by)
Cq_values$Cq_var <- ave(Cq_values$Cq, Cq_values$unique_name, FUN=var)

# use the mean function, and calculates the mean of Cq values by the unique.name (each sample/primer has 3 Cq values to 
# calculate the mean by)
Cq_values$Cq_mean <- ave(Cq_values$Cq, Cq_values$unique_name, FUN=mean)

# Keep all rows where the replicate is 1 (or you could do 2 or 3)
# make into new Df so we keep the original with all the Cq values
Cq_values_1rep <- Cq_values[which(Cq_values$replicate == "1"),]

# histogram of all variances
ggplot(Cq_values_1rep, aes(x=Cq_var)) + geom_histogram(bins = 50)
# Ok some variation is really big, but most is fine 
# I do think this would be the controls for PIF 3 because some can be 40 and some can be like 35 and mess up the variance 
# If there is 1 Cq value that is vastly different than the other 2 technical replicatates I am going to remove it 

# first order df by the Cq variance 
ordered <- Cq_values[order(Cq_values$Cq_var, decreasing = TRUE),]
head(ordered)
# change rownames
rownames(ordered) <- NULL
# what rows have a Cq value that is very different than the other 2 replicates 
# 2, 4, 8, 11, 15, 18, 19, 24, 33, 45, 46, 49
#remove those rows with negative indexing 
ordered_2 <- ordered[-c(2, 4, 8, 11, 15, 18, 19, 24, 33, 45, 46, 49), ]
# now to re-do the variance and the means 
ordered_2$Cq_var <- ave(ordered_2$Cq, ordered_2$unique_name, FUN=var)
ordered_2$Cq_mean <- ave(ordered_2$Cq, ordered_2$unique_name, FUN=mean)
# this seems to have worked good 
# now I need to keep only 1 replicate row 
# remove "duplicated" rows based on the unique_name column: each technical replicate should have the same unique_name
Cq_values_var_1rep <- ordered_2[!duplicated(ordered_2$unique_name), ]
# re-look at histogram of variances
# there will probably be a few high ones because for some samples there was not an obvious 1 Cq value different than the others 
ggplot(Cq_values_var_1rep, aes(x=Cq_var)) + geom_histogram(bins = 50)
# this I think is a lot better and what I will move forward with 
```

Calculating Delta Cqs between Lambda and PIF3

```{r}
# need to order the dataset 
# try ordering by primer first then by sample 
Cq_values_var_1rep <- Cq_values_var_1rep[order(Cq_values_var_1rep$primer),]
Cq_values_var_1rep
# then order by sample 
Cq_values_var_1rep <- Cq_values_var_1rep[order(Cq_values_var_1rep$sample),]
Cq_values_var_1rep

# this consistently LAMBDA first, then PIF 3 
nrow(Cq_values_var_1rep)

# Separate that dataframe, incriminating by 2, every number between 1-64 (number of rows in dataframe)
Cq_values_var_1rep$Cq_mean[seq(1,64,2)] # these are the LAMBDA Cq means 
Cq_values_var_1rep$Cq_mean[seq(2,64,2)] # these are the PIF 3 primer Cq means 

# make the delta Cq by subtracting the PIF 3 values from the LAMBDA primer values
# and this is saved as a vector in R 
delta_Cqs <- Cq_values_var_1rep$Cq_mean[seq(1,64,2)] - Cq_values_var_1rep$Cq_mean[seq(2,64,2)]
#vector
delta_Cqs

# Keep only rows that are PIF3 because now we have two rows per sample
Cq_values1rep_Delta <- Cq_values_var_1rep[which(Cq_values_var_1rep$primer == "PIF 3"),]
# And then add in the delta Cqs as a new column
Cq_values1rep_Delta$delta_Cq <- delta_Cqs

# do 2^ delta Cq
Cq_values1rep_Delta$delta_Cq_2 <- 2^(delta_Cqs)

# plot 
ggplot(Cq_values1rep_Delta, aes(y= delta_Cq_2, x=cell_type, fill=infection)) + geom_boxplot()  + theme_linedraw()  + facet_grid(~day)  + scale_y_continuous(trans='log10', breaks=trans_breaks('log10', function(x) 10^x), labels=trans_format('log10', math_format(10^.x)))


```

Calculating delta delta Cq 

Controls 
```{r}
# separate out control and DiNV samples 
control <- Cq_values1rep_Delta[which(Cq_values1rep_Delta$infection == "control"),]
DiNV <- Cq_values1rep_Delta[which(Cq_values1rep_Delta$infection != "control"),]
 
# separate out the day 0 samples to start with 
day_0_cc <- control[which(control$day == "day0"),]
# separate out cell type Dv-1 
day_0_cc_Dv1 <- day_0_cc[which(day_0_cc$cell_type == "DV-1"),]
# find mean of Delta Cq (not 2^delta) for Dv-1
mean(day_0_cc_Dv1$delta_Cq)
# -10.77958
# separate out cell type Myd88 
day_0_cc_Myd <- day_0_cc[which(day_0_cc$cell_type != "DV-1"),]
# find mean of Delta Cq (not 2^delta) for Dv-1
mean(day_0_cc_Myd$delta_Cq)
# -9.9275

# separate out day 5 only from controls 
day_5_cc <- control[which(control$day != "day0"),]
# separate out Dv-1
day_5_cc_Dv1 <- day_5_cc[which(day_5_cc$cell_type == "DV-1"),]

# subtract average day 0 delta Cq for Dv-1 from the delta Cq of all others 
day_5_cc_Dv1_delta_delta <- day_5_cc_Dv1$delta_Cq - -10.77958
day_5_cc_Dv1_delta_delta

# add as column 
day_5_cc_Dv1$delta_delta_Cq <- day_5_cc_Dv1_delta_delta

# do 2^ delta delta 
day_5_cc_Dv1$delta_delta_Cq_2 <- 2^(day_5_cc_Dv1_delta_delta)

# separate out Myd88
day_5_cc_Myd <- day_5_cc[which(day_5_cc$cell_type != "DV-1"),]

# subtract average day 0 delta Cq for Dv-1 from the delta Cq of all others 
day_5_cc_Myd_delta_delta <- day_5_cc_Myd$delta_Cq - -9.9275
day_5_cc_Myd_delta_delta

# add as column 
day_5_cc_Myd$delta_delta_Cq <- day_5_cc_Myd_delta_delta

# do 2^ delta delta 
day_5_cc_Myd$delta_delta_Cq_2 <- 2^(day_5_cc_Myd_delta_delta)

# combine controls back together  
Control_delta_delta <- rbind(day_5_cc_Dv1, day_5_cc_Myd)
```

elta Delta calculations for DiNV samples 

```{r}
 
# separate out the day 0 samples to start with 
day_0_DiNV <- DiNV[which(DiNV$day == "day0"),]
# separate out cell type Dv-1 
day_0_DiNV_Dv1 <- day_0_DiNV[which(day_0_DiNV$cell_type == "DV-1"),]
# find mean of Delta Cq (not 2^delta) for Dv-1
mean(day_0_DiNV_Dv1$delta_Cq)
# 3.690833
# separate out cell type Myd88 
day_0_DiNV_Myd <- day_0_DiNV[which(day_0_DiNV$cell_type != "DV-1"),]
# find mean of Delta Cq (not 2^delta) for Dv-1
mean(day_0_DiNV_Myd$delta_Cq)
# 3.756667

# separate out day 5 only from DiNVs
day_5_DiNV <- DiNV[which(DiNV$day != "day0"),]
# separate out Dv-1
day_5_DiNV_Dv1 <- day_5_DiNV[which(day_5_DiNV$cell_type == "DV-1"),]

# subtract average day 0 delta Cq for Dv-1 from the delta Cq of all others 
day_5_DiNV_Dv1_delta_delta <- day_5_DiNV_Dv1$delta_Cq -  3.690833
day_5_DiNV_Dv1_delta_delta

# add as column 
day_5_DiNV_Dv1$delta_delta_Cq <- day_5_DiNV_Dv1_delta_delta

# do 2^ delta delta 
day_5_DiNV_Dv1$delta_delta_Cq_2 <- 2^(day_5_DiNV_Dv1_delta_delta)

# separate out Myd88
day_5_DiNV_Myd <- day_5_DiNV[which(day_5_DiNV$cell_type != "DV-1"),]

# subtract average day 0 delta Cq for Dv-1 from the delta Cq of all others 
day_5_DiNV_Myd_delta_delta <- day_5_DiNV_Myd$delta_Cq - 3.756667
day_5_DiNV_Myd_delta_delta

# add as column 
day_5_DiNV_Myd$delta_delta_Cq <- day_5_DiNV_Myd_delta_delta

# do 2^ delta delta 
day_5_DiNV_Myd$delta_delta_Cq_2 <- 2^(day_5_DiNV_Myd_delta_delta)

# combine controls back together  
DiNV_delta_delta <- rbind(day_5_DiNV_Dv1, day_5_DiNV_Myd)
```

```{r}
delta_delta <- rbind(Control_delta_delta, DiNV_delta_delta)

legend_title <- "Infection"

# plot 
ggplot(delta_delta, aes(y= delta_delta_Cq_2, x=cell_type, fill=infection)) + geom_boxplot()  + theme_light()  + scale_fill_manual(legend_title, values=c("#C994C7", "#CE1256"), labels= c("Cell culture medium", "DiNV")) + geom_dotplot(binaxis='y', stackdir='center', dotsize=0.75, position=position_dodge(0.8)) + scale_x_discrete(labels=c("DV-1" = "Dv-1", "Dinn" = "Dinn"))+ 
  theme(axis.text=element_text(size=12),axis.title=element_text(size=14), legend.text=element_text(size=12), legend.title=element_text(size=14), legend.position = "bottom") +
  labs(title = "Comparing Increase in Virus in Dv-1 \nand Dinn Cells 5 Days Post Innoculation",y = "2^delta delta Cq", x = "Cell Line")
```






