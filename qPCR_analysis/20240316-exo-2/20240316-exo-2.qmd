---
title: "20240316-exo-2"
format: gfm
editor: visual
---

```{r}
library(ggplot2)
library(dplyr)
library(tidyr)
library(Rmisc)
library(rstatix)
```

```{r setup, include=FALSE}
knitr::opts_chunk$set(dpi=300,fig.width=7, fig.height = 4.5)
```

Load in dataset

```{r}
Cq_values <- read.csv("/Users/maggieschedl/Desktop/Github/Unckless_Lab_Resources/qPCR_analysis/20240316-exo-2/20240316-exo-2-qPCR.csv")

```

Look at raw Cq values by primer and sample type

```{r}
# if you want to also include another varaible to separate out the histogram by, you can include a facet 
ggplot(Cq_values, aes(x= Cq, fill = primer)) + geom_histogram(position = "dodge") + facet_grid(~type) 
```

Looks like the TPI Cq does change with the treatment

Calculate variance and mean of Cq value between the technical replicates

```{r}
# use the variance function, and calculates the variance in Cq by the unique.name (each sample/primer has 3 Cq values to 
# calculate the variance by)
Cq_values$Cq_var <- ave(Cq_values$Cq, Cq_values$unique_name, FUN=var)

# use the mean function, and calculates the mean of Cq values by the unique.name (each sample/primer has 3 Cq values to 
# calculate the mean by)
Cq_values$Cq_mean <- ave(Cq_values$Cq, Cq_values$unique_name, FUN=mean)

# Keep all rows where the replicate is 1 (or you could do 2 or 3)
# make into new Df so we keep the original with all the Cq values
Cq_values_1rep <- Cq_values[which(Cq_values$replicate == "1"),]

# histogram of all variances
ggplot(Cq_values_1rep, aes(x=Cq_var)) + geom_histogram(bins = 50)

# There is one that is really large, which is that one?
# it is the first sample, which is 19 and the others are 20, I will just remove that one sample 
# remove just first row 
Cq_values <- Cq_values[c(2:48),]

# redo the varience and means 
Cq_values$Cq_var <- ave(Cq_values$Cq, Cq_values$unique_name, FUN=var)
Cq_values$Cq_mean <- ave(Cq_values$Cq, Cq_values$unique_name, FUN=mean)
# keep only 1 replicate, but use 2 becuase I removed a 1 
Cq_values_1rep <- Cq_values[which(Cq_values$replicate == "2"),]
# histogram of all variances
ggplot(Cq_values_1rep, aes(x=Cq_var)) + geom_histogram(bins = 50)
# much better

# plot variances and means as a scatterplot 
ggplot(Cq_values_1rep, aes(x=Cq_mean, y=Cq_var)) +
  geom_point(size=2, shape=23)
# no real relationship, looks good 

```

Calculating Delta Cqs between TPI and PIF3

```{r}
# samples are not ordered properly
# they need to be ordered with the two primer samples next to each other for each sample 
# order them by the sample
Cq_values_1rep <- Cq_values_1rep[order(Cq_values_1rep$sample),]
Cq_values_1rep
nrow(Cq_values_1rep)

# Separate that dataframe, incriminating by 2, every number between 1-16 (number of rows in dataframe)
Cq_values_1rep$Cq_mean[seq(1,16,2)] # these are the TPI Cq means 
Cq_values_1rep$Cq_mean[seq(2,16,2)] # these are the PIF 3 primer Cq means 

# make the delta Cq by subtracting the PIF 3 values from the TPI primer values
# and this is saved as a vector in R 
delta_Cqs <- Cq_values_1rep$Cq_mean[seq(1,16,2)] - Cq_values_1rep$Cq_mean[seq(2,16,2)]
#vector
delta_Cqs

# Keep only rows that are PIF3 because now we have two rows per sample
Cq_values1rep_Delta <- Cq_values_1rep[which(Cq_values_1rep$primer == "PIF 3"),]
# And then add in the delta Cqs as a new column
Cq_values1rep_Delta$delta_Cq <- delta_Cqs

# do 2^ delta Cq
Cq_values1rep_Delta$delta_Cq_2 <- 2^(delta_Cqs)

# plot 
ggplot(Cq_values1rep_Delta, aes(y= delta_Cq_2, x=type)) + geom_boxplot()  + theme_linedraw() + geom_point(position="jitter", size=3) 

```

Combine this data with the other 3 samples I have from this

```{r}
# read in delta cqs 
First_delta <- read.csv("/Users/maggieschedl/Desktop/Github/Unckless_Lab_Resources/qPCR_analysis/20240316-exo-2/20240112-exo-qPCR-delta.csv")
#reset rownames 
rownames(First_delta) <- NULL
# remove rows with the clarification pellet 
First_delta <- First_delta[c(1:4),]
First_delta <- First_delta[,c(2:6,9:14)]
# combine datasets 
complete_sample_delta <- rbind(First_delta, Cq_values1rep_Delta)

complete_sample_delta <- complete_sample_delta %>% 
  mutate(type = factor(type, levels = c("hirt extract only", "exonuclease treated")))

# statistics on variance 
stats <- summarySE(complete_sample_delta, measurevar="delta_Cq_2", groupvars=c("type"))
stats

# plot 
legend_title <- "DNA type"

ggplot(complete_sample_delta, aes(y= delta_Cq_2, x=type)) +
  geom_errorbar(aes(ymin = delta_Cq_2-se, ymax = delta_Cq_2+se, color = type),data = stats, position = position_dodge(0.3), width = 0.2)+
  geom_point(aes(color = type), position = position_dodge(0.3), size = 3) +
  scale_color_manual(legend_title,values = c( "#62CFF4", "#2C67F2" )) + theme_light() + 
  theme(axis.text=element_text(size=14),axis.title=element_text(size=16), legend.position = "none") +
  scale_x_discrete(labels=c("hirt extract only" = "Hirt Extraction", "exonuclease treated" = "Hirt Extracted and \nExonuclease Treated")) +
  labs(title = "Comparing Ammount of DiNV DNA in Extractions \nwith and without Exonuclase V Treatment",y = "Relative Amount of DiNV to \nHost Genome", x = "DNA Sample Type") 

```

T test
```{r}
stat.test <- complete_sample_delta %>%
  t_test(delta_Cq_2 ~ type) %>%
  adjust_pvalue(method = "bonferroni") %>%
  add_significance("p.adj")
stat.test
```

what is the mean for each type?

```{r}
# separate hirt only
hirt <- complete_sample_delta[which(complete_sample_delta$type == "hirt extract only"),]
hmean <- mean(hirt$delta_Cq_2)
hmean
# separate hirt 
exo <- complete_sample_delta[which(complete_sample_delta$type != "hirt extract only"),]
exmean <- mean(exo$delta_Cq_2)
exmean
```

